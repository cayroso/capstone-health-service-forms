// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hsforms.web.Data;

namespace hsforms.web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190323020454_AppDbSchema")]
    partial class AppDbSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("hsforms.web.Data.Role", b =>
                {
                    b.Property<string>("RoleId");

                    b.Property<string>("Name");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_FP", b =>
                {
                    b.Property<string>("TCL_FPId");

                    b.Property<string>("Barangay");

                    b.Property<DateTime>("LastUploaded");

                    b.Property<string>("Municipality");

                    b.Property<string>("Province");

                    b.Property<string>("Region");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("TCL_FPId");

                    b.HasIndex("UserId");

                    b.ToTable("FP");
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_FP_Entry", b =>
                {
                    b.Property<string>("TCL_FP_EntryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<DateTime?>("DateAccomplishedService1");

                    b.Property<DateTime?>("DateAccomplishedService10");

                    b.Property<DateTime?>("DateAccomplishedService11");

                    b.Property<DateTime?>("DateAccomplishedService12");

                    b.Property<DateTime?>("DateAccomplishedService2");

                    b.Property<DateTime?>("DateAccomplishedService3");

                    b.Property<DateTime?>("DateAccomplishedService4");

                    b.Property<DateTime?>("DateAccomplishedService5");

                    b.Property<DateTime?>("DateAccomplishedService6");

                    b.Property<DateTime?>("DateAccomplishedService7");

                    b.Property<DateTime?>("DateAccomplishedService8");

                    b.Property<DateTime?>("DateAccomplishedService9");

                    b.Property<DateTime?>("DateNextService1");

                    b.Property<DateTime?>("DateNextService10");

                    b.Property<DateTime?>("DateNextService11");

                    b.Property<DateTime?>("DateNextService12");

                    b.Property<DateTime?>("DateNextService2");

                    b.Property<DateTime?>("DateNextService3");

                    b.Property<DateTime?>("DateNextService4");

                    b.Property<DateTime?>("DateNextService5");

                    b.Property<DateTime?>("DateNextService6");

                    b.Property<DateTime?>("DateNextService7");

                    b.Property<DateTime?>("DateNextService8");

                    b.Property<DateTime?>("DateNextService9");

                    b.Property<DateTime>("DateOfRegistration");

                    b.Property<DateTime?>("DropoutDate");

                    b.Property<string>("DropoutReason");

                    b.Property<string>("FamilySerialNumber");

                    b.Property<string>("Name");

                    b.Property<string>("PresentMethod");

                    b.Property<string>("PreviousMethod");

                    b.Property<string>("Remarks");

                    b.Property<string>("TCL_FPId")
                        .IsRequired();

                    b.Property<string>("TypeOfClient");

                    b.HasKey("TCL_FP_EntryId");

                    b.HasIndex("TCL_FPId");

                    b.ToTable("FPEntry");
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_NEPI", b =>
                {
                    b.Property<string>("TCL_NEPIId");

                    b.Property<string>("Barangay");

                    b.Property<DateTime>("LastUploaded");

                    b.Property<string>("Municipality");

                    b.Property<string>("Province");

                    b.Property<string>("Region");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("TCL_NEPIId");

                    b.HasIndex("UserId");

                    b.ToTable("NEPI");
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_NEPI_Entry", b =>
                {
                    b.Property<string>("TCL_NEPI_EntryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime?>("BCG");

                    b.Property<DateTime?>("CPABTTAssessed");

                    b.Property<string>("CPABTTStatus");

                    b.Property<bool>("ChildExclusiveBreastFeed1");

                    b.Property<bool>("ChildExclusiveBreastFeed2");

                    b.Property<bool>("ChildExclusiveBreastFeed3");

                    b.Property<bool>("ChildExclusiveBreastFeed4");

                    b.Property<bool>("ChildExclusiveBreastFeed5");

                    b.Property<DateTime?>("ChildExclusiveBreastFeed6");

                    b.Property<bool>("ComplimentaryFeeding6");

                    b.Property<bool>("ComplimentaryFeeding7");

                    b.Property<bool>("ComplimentaryFeeding8");

                    b.Property<DateTime?>("DateFullyImmunizedChild");

                    b.Property<DateTime?>("DateNewbornScreeningDone");

                    b.Property<DateTime?>("DateNewbornScreeningReferral");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<DateTime?>("DateOfRegistration");

                    b.Property<DateTime?>("Deworming");

                    b.Property<string>("FamilySerialNumber");

                    b.Property<string>("Gender");

                    b.Property<decimal>("Height");

                    b.Property<DateTime?>("HepaB1MoreThan24hrs");

                    b.Property<DateTime?>("HepaB1Within24hrs");

                    b.Property<DateTime?>("IPV");

                    b.Property<bool>("IronA1");

                    b.Property<bool>("IronA2");

                    b.Property<DateTime?>("MCV1");

                    b.Property<DateTime?>("MCV2");

                    b.Property<bool>("MNP1");

                    b.Property<bool>("MNP2");

                    b.Property<string>("NHTS");

                    b.Property<string>("NameOfChild");

                    b.Property<string>("NameOfMother");

                    b.Property<DateTime?>("OPV1");

                    b.Property<DateTime?>("OPV2");

                    b.Property<DateTime?>("OPV3");

                    b.Property<DateTime?>("PCV1");

                    b.Property<DateTime?>("PCV2");

                    b.Property<DateTime?>("PCV3");

                    b.Property<DateTime?>("Pentavalent1");

                    b.Property<DateTime?>("Pentavalent2");

                    b.Property<DateTime?>("Pentavalent3");

                    b.Property<string>("Remarks");

                    b.Property<DateTime?>("RotaVirusVaccine1");

                    b.Property<DateTime?>("RotaVirusVaccine2");

                    b.Property<string>("TCL_NEPIId")
                        .IsRequired();

                    b.Property<bool>("VitaminA1");

                    b.Property<bool>("VitaminA2");

                    b.Property<bool>("VitaminA3");

                    b.Property<decimal>("Weight");

                    b.HasKey("TCL_NEPI_EntryId");

                    b.HasIndex("TCL_NEPIId");

                    b.ToTable("NEPIEntry");
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_PNC", b =>
                {
                    b.Property<string>("TCL_PNCId");

                    b.Property<string>("Barangay");

                    b.Property<DateTime>("LastUploaded");

                    b.Property<string>("Municipality");

                    b.Property<string>("Province");

                    b.Property<string>("Region");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("TCL_PNCId");

                    b.HasIndex("UserId");

                    b.ToTable("PNC");
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_PNC_Entry", b =>
                {
                    b.Property<string>("TCL_PNC_EntryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<int>("Age");

                    b.Property<string>("AttendedBy");

                    b.Property<decimal>("BirthWeight");

                    b.Property<DateTime?>("DateOfRegistration");

                    b.Property<DateTime?>("DateSTIPenicillin");

                    b.Property<DateTime?>("DateSTIResult");

                    b.Property<DateTime?>("DateSTITested");

                    b.Property<DateTime?>("DateTetanusToxiodVaccine1");

                    b.Property<DateTime?>("DateTetanusToxiodVaccine2");

                    b.Property<DateTime?>("DateTetanusToxiodVaccine3");

                    b.Property<DateTime?>("DateTetanusToxiodVaccine4");

                    b.Property<DateTime?>("DateTetanusToxiodVaccine5");

                    b.Property<DateTime?>("EDC");

                    b.Property<string>("FamilySerialNumber");

                    b.Property<DateTime?>("IronWithFolicDateGiven1");

                    b.Property<DateTime?>("IronWithFolicDateGiven2");

                    b.Property<DateTime?>("IronWithFolicDateGiven3");

                    b.Property<DateTime?>("IronWithFolicDateGiven4");

                    b.Property<DateTime?>("IronWithFolicDateGiven5");

                    b.Property<DateTime?>("IronWithFolicDateGiven6");

                    b.Property<int>("IronWithFolicNumberGiven1");

                    b.Property<int>("IronWithFolicNumberGiven2");

                    b.Property<int>("IronWithFolicNumberGiven3");

                    b.Property<int>("IronWithFolicNumberGiven4");

                    b.Property<int>("IronWithFolicNumberGiven5");

                    b.Property<int>("IronWithFolicNumberGiven6");

                    b.Property<DateTime?>("LMPDate");

                    b.Property<string>("LMPGP");

                    b.Property<string>("Name");

                    b.Property<string>("PlaceOfHealthFacility");

                    b.Property<string>("PlaceOfNIO");

                    b.Property<DateTime?>("PregnancyDateTerminated");

                    b.Property<string>("PregnancyGender");

                    b.Property<string>("PregnancyOutcome");

                    b.Property<DateTime?>("PrenatalVisitTrimester1");

                    b.Property<DateTime?>("PrenatalVisitTrimester2");

                    b.Property<DateTime?>("PrenatalVisitTrimester3");

                    b.Property<string>("Remarks");

                    b.Property<string>("TCL_PNCId")
                        .IsRequired();

                    b.Property<string>("TetanusStatus");

                    b.HasKey("TCL_PNC_EntryId");

                    b.HasIndex("TCL_PNCId");

                    b.ToTable("PNCEntry");
                });

            modelBuilder.Entity("hsforms.web.Data.User", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Mobile");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("hsforms.web.Data.UserRole", b =>
                {
                    b.Property<string>("UserRoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_FP", b =>
                {
                    b.HasOne("hsforms.web.Data.User", "User")
                        .WithMany("FPs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_FP_Entry", b =>
                {
                    b.HasOne("hsforms.web.Data.TCL_FP", "TCL_FP")
                        .WithMany("Entries")
                        .HasForeignKey("TCL_FPId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_NEPI", b =>
                {
                    b.HasOne("hsforms.web.Data.User", "User")
                        .WithMany("NEPIs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_NEPI_Entry", b =>
                {
                    b.HasOne("hsforms.web.Data.TCL_NEPI", "TCL_NEPI")
                        .WithMany("Entries")
                        .HasForeignKey("TCL_NEPIId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_PNC", b =>
                {
                    b.HasOne("hsforms.web.Data.User", "User")
                        .WithMany("PNCs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("hsforms.web.Data.TCL_PNC_Entry", b =>
                {
                    b.HasOne("hsforms.web.Data.TCL_PNC", "TCL_PNC")
                        .WithMany("Entries")
                        .HasForeignKey("TCL_PNCId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("hsforms.web.Data.UserRole", b =>
                {
                    b.HasOne("hsforms.web.Data.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("hsforms.web.Data.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
